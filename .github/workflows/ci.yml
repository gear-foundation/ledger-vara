name: CI

on:
  push:
    branches: [master]
    tags: ["*"]
  pull_request:
    branches: [master]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - id: version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Show version
        run: echo ${{ steps.version.outputs.VERSION }}

    outputs:
      version: ${{ steps.version.outputs.VERSION }}

  build:
    needs: [prepare]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install toolchain
        run: sudo apt-get update && sudo apt-get install -y clang gcc-arm-none-eabi gcc-multilib

      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src, clippy, rustfmt

      - name: Install cargo-ledger
        run: cargo install cargo-ledger --git=https://github.com/LedgerHQ/cargo-ledger

      - name: Setup cargo-ledger
        run: cargo ledger setup

      - name: Cargo clippy
        run: cargo clippy --all -- --no-deps -D warnings

      - name: Cargo fmt
        run: cargo fmt --all -- --check

      - name: Build app
        run: |
          cargo ledger build nanos
          cargo ledger build nanosplus
          cargo ledger build nanox

      - name: Build app for Speculos
        if: github.event_name != 'pull_request'
        run: cargo ledger build nanosplus -- -F speculos

      - name: Deploy
        if: github.event_name != 'pull_request'
        uses: dawidd6/action-ansible-playbook@v2
        with:
          directory: ansible
          playbook: update-apps.yml
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          inventory: ledger.vara.rs

      - name: Prepare release
        # TODO: Uncomment
        #if: startsWith(github.ref, 'refs/tags/')
        run: |
          make
          cd assets
          XZ_OPT=-9 tar -cvJf ../app-vara.tar.xz app_nano* icon_*.gif
          awk '(/^## \[[0-9]+\.[0-9]+\.[0-9]+\]/ || /^\[unreleased\]/) && STATE=="show" { exit } \
              STATE=="show"; \
              /^## \[${{ needs.prepare.outputs.version }}\]/ { STATE="show" }' CHANGELOG.md \
          | awk 'NF { SHOW=1 } SHOW' > RELEASE_NOTES.md
          cat RELEASE_NOTES.md

      - name: Publish release
        # TODO: Uncomment
        #if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: app-vara.tar.xz
          body_path: RELEASE_NOTES.md
