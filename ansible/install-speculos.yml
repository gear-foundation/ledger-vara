# Run
#     ansible-playbook install-speculos.yml -i ledger.vara.rs,
#
---
- name: Install Speculos
  hosts: all
  remote_user: ubuntu
  vars:
    seed: bottom drive obey lake curtain smoke basket hold race lonely fit walk
    devices:
      - id: nanosp
        target: nanosplus
        name: Nano S Plus

  tasks:
    - name: Enable firewall
      become: yes
      ufw:
        state: enabled
        policy: allow

    - name: Allow OpenSSH
      become: yes
      ufw:
        rule: allow
        name: OpenSSH

    - name: Allow Nginx
      become: yes
      ufw:
        rule: allow
        name: "Nginx Full"

    - name: Deny anything except allowed
      become: yes
      ufw:
        state: enabled
        policy: deny

    - name: Stop services
      become: yes
      loop: '{{ devices }}'
      ignore_errors: yes
      systemd:
        name: speculos-{{ item.id }}
        state: stopped

    - name: Create Speculos directory
      become: yes
      file:
        path: /opt/speculos
        state: directory
        owner: root
        group: root

    - name: Install Speculos dependencies
      become: yes
      apt:
        name: [python3-construct, python3-flask-restful, python3-mnemonic, python3-pil, python3-pyelftools, qemu-user-static]
        state: latest
        update_cache: yes

    - name: Copy script
      become: yes
      copy:
        src: ../artifact/speculos.py
        dest: /opt/speculos/
        force: yes
        group: root
        owner: root
        mode: '0755'

    - name: Copy executables
      become: yes
      synchronize:
        src: ../artifact/speculos
        dest: /opt/speculos
        delete: true

    - name: Copy SystemD configs
      become: yes
      loop: '{{ devices }}'
      template:
        src: speculos.service.j2
        dest: /etc/systemd/system/speculos-{{ item.id }}.service
        owner: root
        group: root

    - name: Start services
      become: yes
      loop: '{{ devices }}'
      systemd:
        name: speculos-{{ item.id }}
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Install Nginx, Certbot et al.
      become: yes
      apt:
        name: [nginx, certbot, python3-certbot-nginx]
        state: latest
        update_cache: yes

    - name: Start Nginx
      become: yes
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Create WWW directory
      become: yes
      file:
        path: /var/www/{{ inventory_hostname }}
        state: directory
        owner: www-data
        group: www-data

    - name: Copy HTML
      become: yes
      copy:
        src: html
        dest: /var/www/{{ inventory_hostname }}/
        owner: www-data
        group: www-data
        force: yes

    - name: Copy Nginx configuration
      become: yes
      template:
        src: server-block.j2
        dest: /etc/nginx/sites-available/{{ inventory_hostname }}

    - name: Enable Nginx configuration
      become: yes
      file:
        src: /etc/nginx/sites-available/{{ inventory_hostname }}
        dest: /etc/nginx/sites-enabled/{{ inventory_hostname }}
        state: link

    - name: Reload Nginx
      become: yes
      service:
        name: nginx
        state: reloaded

    - name: Install a certificate
      become: yes
      command: >
        certbot --nginx
        -d {{ inventory_hostname }}
        --register-unsafely-without-email
        --agree-tos --noninteractive --redirect

    - name: Reload Nginx again
      become: yes
      service:
        name: nginx
        state: reloaded

    - name: Set cron job for auto renewal
      become: yes
      cron:
        name: Renew letsencrypt
        special_time: monthly
        job: /usr/bin/certbot renew
